{
  "hash": "5deda7bdcc5f96d7c6aa40da3ac49137",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Epidemiology\"\nsubtitle: October 24, 2025\nauthor: \"Maxwell Salvatore\"\nformat:\n  revealjs:\n    slide-number: true\n    chalkboard: \n      buttons: false\n    preview-links: auto\n    logo: https://irisp2.blob.core.windows.net/public/upenn/SharedLinks/images-logo%2014th%20annual.JPG\n    footer: BMIN5030\n    css: logo.css\ninclude-in-header: \n  text: |\n    <style>\n      .custom-small table {\n        font-size: .6em\n      }\n    </style>\n---\n\n## Hello!\n\nToday, I'll talk a little bit about:\n\n- Who am I?\n- What is epidemiology?\n- Real-world applications\n- Current trends and emerging opportunities\n\n## Who am I? {auto-animate=\"true\" auto-animate-easing=\"ease-in-out\"}\n\n![](https://brand.umich.edu/assets/brand/style-guide/logo-guidelines/U-M_Logo-Hex.png){.absolute top=\"65\" left=\"750\" width=\"100\" height=\"100\"}\n\n::: columns\n::: {.column width=\"40%\"}\n\n![](https://penncil.med.upenn.edu/wp-content/uploads/2024/08/salvatore_headshot-400x400.jpeg)\n\n:::\n::: {.column width=\"60%\"}\n- Econ undergrad\n\n:::\n:::\n\n## Who am I? {auto-animate=\"true\" auto-animate-easing=\"ease-in-out\"}\n\n![](https://brand.umich.edu/assets/brand/style-guide/logo-guidelines/U-M_Logo-Hex.png){.absolute top=\"130\" left=\"1000\" width=\"100\" height=\"100\"}\n\n::: columns\n::: {.column width=\"40%\"}\n\n![](https://penncil.med.upenn.edu/wp-content/uploads/2024/08/salvatore_headshot-400x400.jpeg)\n\n:::\n::: {.column width=\"60%\"}\n- Econ undergrad\n- Epidemiology masters and PhD\n\n::: incremental\n- Liver cancer incidence trends, survey development, EHR-linked biobanks, COVID-19 tracking\n- Penn postdoc with [Marylyn Ritchie](https://www.med.upenn.edu/apps/faculty/index.php/g275/p9023600) (Genetics) and [Yong Chen](https://dbei.med.upenn.edu/staff/yong_chen/) (DBEI) looking at GLP-1 RAs\n:::\n:::\n:::\n\n\n## What is epidemiology?\n\n::: columns\n::: {.column width=\"40%\"}\n\n[![John Snow-Cholera Map](https://www.york.ac.uk/depts/maths/histstat/images/snow_map.gif)](https://www.york.ac.uk/depts/maths/histstat/snow_map.htm)\n:::\n::: {.column width=\"60%\"}\n\n::: {.callout-tip title = \"A Broad definition\"}\nThe study of the pattern, distribution, and causes of diseases in populations\n:::\n\n::: custom-small\n| Type | Description |\n| ---- | ----------- |\n| Descriptive | Focuses on describing the frequency, pattern, and distribution of diseases in a population |\n| Analytic | Aims to identify the factors that contribute to disease occurrence |\n| Experimental | Involves actively manipulating exposure factors to study their effects|\n:::\n\n:::\n:::\n\n:::{.notes}\n\n:::\n\n## Case Study 1: COVID-19 Surveillance and Prediction\n\n:::{.callout-important title = \"The Challenge\" collapse=\"true\"}\n- Rapid data integration from multiple sources\n- Real-time analysis and decision support\n- Uncertainty quantification in evolving situations\n:::\n\n- Data Science Solutions\n  - Automated data pipelines and dashboards\n  - Nowcasting and forecasting models\n  - Wastewater surveillance integration\n\n## Case Study 2: Pharmacovigilance and Drug Safety\n\n## Case Study 3: Genomic Epidemiology and Precision Medicine\n\n## Emerging Frontiers\n<details open>\n  <summary>Digital Epidemiology</summary>\n  <ul>\n    <li>Social media and search trends for disease surveillance</li>\n    <li>Mobility data and contact pattern analysis</li>\n    <li>Wearable devices and continuous monitoring</li>\n  </ul>\n</details>\n\n<details>\n  <summary>Environmental Health Data Science</summary>\n  <ul>\n    <li>Satellite data and air quality monitoring</li>\n    <li>Climate change and health impacts</li>\n    <li>Exposome research approaches</li>\n  </ul>\n</details>\n\n<details>\n  <summary>Health Equity and Algorithmic Bias</summary>\n  <ul>\n    <li>Identifying and addressing disparities in large datasets</li>\n    <li>Fairness metrics and bias detection</li>\n    <li>Community-engaged data science</li>\n  </ul>\n</details>\n\n## Practical skills\n\n::: columns\n\n::: {.column width=\"33%\"}\n\n**Building a Data Science Portfolio**\n\n::: {style=\"font-size: 32px;\"}\n- GitHub best practices for showcasing work\n- Reproducible analysis examples\n- Documentation and code quality\n:::\n\n:::\n\n::: {.column width=\"33%\"}\n\n**Collaboration and Communication**\n\n::: {style=\"font-size: 32px;\"}\n- Working with interdisciplinary teams\n- Translating technical results for stakeholders\n- Data visualization for different audiences\n:::\n\n:::\n\n::: {.column width=\"33%\"}\n\n**Staying Current**\n\n::: {style=\"font-size: 32px;\"}\n- Key conferences and journals\n- Online communities and resources\n- Continuous learning strategies\n:::\n\n:::\n\n:::\n\n## Interactive Demo: Real-World Data Analysis\n\nResearch question: Investigate a foodborne illness outbreak\n\n## The Dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(stringr)\n\n# Read the data\ndata <- readr::read_csv(\"~/Downloads/outbreak_data.csv\")\n\n# What we're dealing with\ndplyr::glimpse(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` small-output\nRows: 450\nColumns: 9\n$ case_id          <dbl> 366, 339, 29, 398, 334, 42, 18, 61, 193, 154, 171, 42…\n$ report_date      <dttm> 2024-03-17 15:00:00, 2024-03-19 00:00:00, 2024-06-15…\n$ onset_date       <chr> \"2024-03-16\", \"2024-03-17\", \"06/14/2024\", \"03/18/2024…\n$ restaurant_id    <chr> \"R_047\", \"R_047\", \"R_010\", \"R_047\", \"R_047\", \"R_002\",…\n$ food_type        <chr> NA, NA, \"Mediterranean\", NA, NA, \"Indian\", \"Indian\", …\n$ age_group        <chr> \"35-54\", \"75+\", \"35-54\", \"35-54\", \"35-54\", \"0-17\", \"0…\n$ symptoms         <chr> \"diarrhea, vomiting, fever\", \"diarrhea, fever, headac…\n$ exposure_date    <chr> \"03/16/2024\", \"2024-03-16\", \"06/14/2024\", \"2024-03-18…\n$ inspector_rating <chr> NA, NA, \"A\", NA, NA, \"B\", \"B\", \"F\", \"C\", \"F\", \"A\", NA…\n```\n\n\n:::\n:::\n\n\n:::{.notes}\nNote that the data are *messy* - there are missing values in some variables (e.g., `food_type`) and dates are formatted differently in `exposure_date`\n:::\n\n## Clean the data\n\n::: {.panel-tabset}\n\n### Code\n\n::: {style=\"font-size: 0.8em;\"}\n\n::: {.cell}\n\n```{.r .cell-code}\noutbreak_clean <- data |>\n  mutate(\n    onset_date = mdy(onset_date),  # Handle mixed formats\n    report_date = ymd(report_date),\n    exposure_date = mdy(exposure_date)\n  ) |>\n\n  # Calculate incubation period\n  mutate(incubation_hours = as.numeric(onset_date - exposure_date) * 24) |>\n\n  # Filter realistic incubation periods\n  filter(incubation_hours >= 1 & incubation_hours <= 168) |>  # 1 hour to 1 week\n\n  # Clean up missing inspector ratings\n  mutate(inspector_rating = case_when(\n    is.na(inspector_rating) ~ \"Unknown\",\n    TRUE ~ inspector_rating\n  ))\n```\n:::\n\n:::\n\n### Data\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n``` small-output\n# A tibble: 34 × 10\n   case_id report_date onset_date restaurant_id food_type     age_group symptoms\n     <dbl> <date>      <date>     <chr>         <chr>         <chr>     <chr>   \n 1      27 NA          2024-03-30 R_004         Italian       55-74     vomitin…\n 2     447 NA          2024-03-19 R_047         <NA>          35-54     diarrhe…\n 3     343 NA          2024-03-16 R_047         <NA>          18-34     diarrhe…\n 4     149 NA          2024-02-06 R_011         Mediterranean 55-74     vomitin…\n 5     406 NA          2024-03-16 R_047         <NA>          0-17      diarrhe…\n 6      50 NA          2024-05-28 R_023         Chinese       35-54     diarrhe…\n 7      75 NA          2024-02-24 R_006         American      35-54     diarrhe…\n 8     110 NA          2024-01-12 R_020         Chinese       18-34     diarrhe…\n 9     404 2024-03-24  2024-03-18 R_047         <NA>          55-74     diarrhe…\n10     120 NA          2024-04-03 R_024         American      35-54     nausea,…\n# ℹ 24 more rows\n# ℹ 3 more variables: exposure_date <date>, inspector_rating <chr>,\n#   incubation_hours <dbl>\n```\n\n\n:::\n:::\n\n\n:::\n\n## Explore the data\n\n::: {.panel-tabset}\n\n### Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Temporal pattern - is there clustering?\noutbreak_clean |>\n  count(onset_date) |>\n  ggplot(aes(x = onset_date, y = n)) +\n  geom_col() +\n  labs(title = \"Cases by Onset Date\",\n       subtitle = \"Looking for temporal clustering\",\n       x = \"Onset Date\", y = \"Number of Cases\") +\n  theme_minimal()\n```\n:::\n\n\n### Output\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](bmin5030_epid_lecture_2025_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n:::\n\n## Explore the data\n\n::: {.panel-tabset}\n\n### Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Which restaurants are involved?\nrestaurant_cases <- outbreak_clean |>\n  count(restaurant_id, sort = TRUE)\n\n# Top 5 restaurants\nrestaurant_cases |> \n  head() |>\n  ggplot(aes(x = reorder(restaurant_id, n), y = n)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Cases by Restaurant\", \n       x = \"Restaurant ID\", y = \"Number of Cases\")\n```\n:::\n\n\n### Output\n\n::: {.cell}\n::: {.cell-output-display}\n![](bmin5030_epid_lecture_2025_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n:::\n\n## Drilling down\n\n::: {.panel-tabset}\n\n### Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Focus on the suspicious restaurant\nsuspect_restaurant <- outbreak_clean |>\n  filter(restaurant_id == \"R_047\") |>\n  arrange(onset_date)\n\n# What do we know about this place?\nsuspect_restaurant |>\n  select(onset_date, age_group, symptoms, inspector_rating) |>\n  head(10)\n```\n:::\n\n\n### Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   onset_date age_group symptoms                                inspector_rating\n   <date>     <chr>     <chr>                                   <chr>           \n 1 2024-03-15 18-34     diarrhea, fever, abdominal_cramps, vom… Unknown         \n 2 2024-03-16 18-34     diarrhea, fever, abdominal_cramps, vom… Unknown         \n 3 2024-03-16 0-17      diarrhea, fever, headache               Unknown         \n 4 2024-03-16 35-54     diarrhea, fever, headache               Unknown         \n 5 2024-03-17 35-54     diarrhea, fever, headache               Unknown         \n 6 2024-03-18 55-74     diarrhea, vomiting, fever               Unknown         \n 7 2024-03-19 35-54     diarrhea, fever, abdominal_cramps, vom… Unknown         \n 8 2024-03-19 0-17      diarrhea, fever, headache               Unknown         \n 9 2024-03-19 18-34     diarrhea, fever, headache               Unknown         \n10 2024-03-19 18-34     diarrhea, fever, headache               Unknown         \n```\n\n\n:::\n:::\n\n\n:::\n\n## Drilling down\n\n::: {.panel-tabset}\n\n### Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# Symptom pattern analysis\noutbreak_clean |>\n  filter(restaurant_id == \"R_047\") |>\n  separate_rows(symptoms, sep = \",\") |>\n  mutate(symptoms = str_trim(symptoms)) |>\n  count(symptoms, sort = TRUE) |>\n  head(8) |>\n  ggplot(aes(x = reorder(symptoms, n), y = n)) +\n  geom_col(fill = \"darkred\") +\n  coord_flip() +\n  labs(title = \"Symptoms Among R_047 Cases\",\n       subtitle = \"Suggests specific pathogen pattern\")\n```\n:::\n\n\n### Output\n\n::: {.cell}\n::: {.cell-output-display}\n![](bmin5030_epid_lecture_2025_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n:::\n\n## Epidemiological methods\n\n- Study designs > data collection\n- Data already collected. Now what?\n\n",
    "supporting": [
      "bmin5030_epid_lecture_2025_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}